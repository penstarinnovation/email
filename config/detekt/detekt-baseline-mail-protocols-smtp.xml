<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>CyclomaticComplexMethod:SmtpTransport.kt$SmtpTransport$@VisibleForTesting @Throws(MessagingException::class) internal fun open()</ID>
    <ID>ForbiddenComment:SmtpTransportTest.kt$SmtpTransportTest$// FIXME: Make sure connection was closed</ID>
    <ID>ImplicitDefaultLocale:SmtpTransport.kt$SmtpTransport$String.format("MAIL FROM:&lt;%s&gt; BODY=8BITMIME", fromAddress)</ID>
    <ID>ImplicitDefaultLocale:SmtpTransport.kt$SmtpTransport$String.format("MAIL FROM:&lt;%s&gt;", fromAddress)</ID>
    <ID>ImplicitDefaultLocale:SmtpTransport.kt$SmtpTransport$String.format("RCPT TO:&lt;%s&gt;", address)</ID>
    <ID>LargeClass:SmtpTransportTest.kt$SmtpTransportTest</ID>
    <ID>LongMethod:SmtpResponseParser.kt$SmtpResponseParser$fun readHelloResponse(): SmtpHelloResponse</ID>
    <ID>LongMethod:SmtpTransport.kt$SmtpTransport$@Throws(MessagingException::class) fun sendMessage(message: Message)</ID>
    <ID>LongMethod:SmtpTransport.kt$SmtpTransport$@VisibleForTesting @Throws(MessagingException::class) internal fun open()</ID>
    <ID>MagicNumber:NegativeSmtpReplyException.kt$500</ID>
    <ID>MagicNumber:NegativeSmtpReplyException.kt$599</ID>
    <ID>MagicNumber:SmtpResponse.kt$SmtpResponse$400</ID>
    <ID>MagicNumber:SmtpResponseParser.kt$SmtpResponseParser$10</ID>
    <ID>MagicNumber:SmtpResponseParser.kt$SmtpResponseParser$100</ID>
    <ID>MagicNumber:SmtpResponseParser.kt$SmtpResponseParser$126</ID>
    <ID>MagicNumber:SmtpResponseParser.kt$SmtpResponseParser$250</ID>
    <ID>MagicNumber:SmtpResponseParser.kt$SmtpResponseParser$32</ID>
    <ID>MagicNumber:SmtpResponseParser.kt$SmtpResponseParser$33</ID>
    <ID>MagicNumber:SmtpResponseParser.kt$SmtpResponseParser$4</ID>
    <ID>MagicNumber:SmtpResponseParser.kt$SmtpResponseParser$5</ID>
    <ID>MagicNumber:SmtpTransport.kt$SmtpTransport$1000</ID>
    <ID>MagicNumber:SmtpTransport.kt$SmtpTransport$1024</ID>
    <ID>MagicNumber:StatusCodeClass.kt$StatusCodeClass.PERMANENT_FAILURE$5</ID>
    <ID>MagicNumber:StatusCodeClass.kt$StatusCodeClass.PERSISTENT_TRANSIENT_FAILURE$4</ID>
    <ID>NestedBlockDepth:SmtpTransport.kt$SmtpTransport$@VisibleForTesting @Throws(MessagingException::class) internal fun open()</ID>
    <ID>ReturnCount:SmtpResponseParser.kt$SmtpResponseParser$fun readHelloResponse(): SmtpHelloResponse</ID>
    <ID>SwallowedException:SmtpTransport.kt$SmtpTransport$e: NegativeSmtpReplyException</ID>
    <ID>ThrowingExceptionsWithoutMessageOrCause:SmtpTransport.kt$SmtpTransport$RuntimeException()</ID>
    <ID>ThrowsCount:SmtpTransport.kt$SmtpTransport$@Throws(MessagingException::class) fun sendMessage(message: Message)</ID>
    <ID>ThrowsCount:SmtpTransport.kt$SmtpTransport$@VisibleForTesting @Throws(MessagingException::class) internal fun open()</ID>
    <ID>TooGenericExceptionCaught:SmtpTransport.kt$SmtpTransport$e: Exception</ID>
    <ID>TooManyFunctions:SmtpResponseParser.kt$SmtpResponseParser</ID>
    <ID>TooManyFunctions:SmtpTransport.kt$SmtpTransport</ID>
  </CurrentIssues>
</SmellBaseline>
